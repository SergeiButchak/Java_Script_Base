1. Продумать, где можно применить замыкания для практикума из седьмого урока. 
К примеру в проект можно добавить функцию с замыканием для задержки отрисовки модального окна корзины 
при быстром изменении содержимого корзины.

2. Не выполняя код, ответить, что выведет браузер и почему:
 
a. 
if (!("a" in window)) {
    var a = 1;
}
alert(a);

Результатом будет undefined. Переменна 'a' появится при загрузке скрипта, следовательно условие if (!("a" in window)) не выполнится, и переменной не будет присвоено никакое значение.

b.
var b = function a(x) {
    x && a(--x);
};
alert(a);

Функция 'a' не определена в глобальном пространстве имен, обращаться к ней можно только через переменную 'b', в результате получим ошибку.


c.
function a(x) {
    return x * 2;
}
var a;
alert(a);

Так как переменная 'a' объявлена, но переменная не инициализирована, результатом будте функция 'a'



d.
function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);

Результатом будет 10, т.к. в функции меням значение аргументов через arguments.


*
function a() {
    alert(this);
}
a.call(null);

При использовании use strict вернёт null, так как контекст заменён на null при вызове функции,
без use strict вернёт объект Window, так как в нестрогом режиме null заменится на самый глобальный контекст.